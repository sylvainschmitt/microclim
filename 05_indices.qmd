```{r setup}
#| message: false
#| include: false
library(tidyverse)
```

# Indices {.unnumbered}

This chapter details all indices building.

-   tas_mean_year:
-   tas_min_year:
-   tas_max_year:
-   tas_mean_dry:
-   tas_min_dry:
-   tas_max_dry:
-   tas_mean_wet:
-   tas_min_wet:
-   tas_max_wet:
-   tas_seas_year = tas_mean_dry  - tas_max_wet:
-   swc_mean_year:
-   swc_min_year:
-   swc_max_year:
-   swc_mean_dry:
-   swc_min_dry:
-   swc_max_dry:
-   swc_mean_wet:
-   swc_min_wet:
-   swc_max_wet:
-   swc_seas_year = swc_mean_wet - swc_mean_dry

```{r prep}
#| eval: false
data <- vroom("outputs/tomst_daily_cleaned.tsv") %>% 
  filter(variable %in% c("swc", "t_air"), type == "daily", metric == "m") %>% 
  select(-type, -metric) %>% 
  pivot_wider(names_from = variable, values_from = value) %>% 
  rename(tas = t_air)
indices <- bind_rows(
  data %>% mutate(season = "year"),
  data %>% filter(date < "2023-07-22") %>% mutate(season = "wet"),
  data %>% filter(date > "2023-07-22", date < "2023-11-7") %>% mutate(season = "dry")
) %>% 
  group_by(site, tomst_sensornum, season) %>% 
  summarise(tas_mean = mean(tas, na.rm = T), 
            tas_max = max(tas, na.rm = T), 
            tas_min = min(tas, na.rm = T),
            swc_mean = mean(swc, na.rm = T), 
            swc_max = max(swc, na.rm = T), 
            swc_min = min(swc, na.rm = T)) %>% 
  gather(variable, value, -season, -site, -tomst_sensornum) %>% 
  mutate(variable = paste0(variable, "_", season)) %>% 
  select(-season) %>% 
  pivot_wider(names_from = variable, values_from = value) %>% 
  mutate(tas_seas_year = tas_mean_dry  - tas_max_wet,
         swc_seas_year = swc_mean_wet - swc_mean_dry)
vroom_write(indices, "outputs/tomst_indices.tsv")
```

```{r}
#| message: false
#| warning: false
library(ggfortify)
indices <- vroom::vroom("outputs/tomst_indices.tsv") %>% 
  na.omit()
autoplot(princomp(select(indices, -site, -tomst_sensornum), cor = TRUE),
         data = indices, col = "lightgrey",
         alpha = 5, loadings = F, loadings.colour = "lightgrey",
         loadings.label = T, loadings.label.repel = T) +
  theme_bw() +
  theme(legend.position = "none")
```

```{r}
#| message: false
#| warning: false
vroom::vroom("outputs/tomst_indices.tsv") %>% 
  na.omit() %>% 
  select(-site, -tomst_sensornum) %>% 
  cor(use = "pairwise.complete.obs") %>% 
  corrplot::corrplot(order = 'AOE', method = "number", type = "upper", 
                     number.digits = 1, number.cex = 0.5)
```

```{r}
#| message: false
#| warning: false
vroom::vroom("outputs/tomst_indices.tsv") %>% 
  gather(variable, value, -site, -tomst_sensornum) %>% 
  # filter(variable %in% c("swc_mean_year", "swc_min_dry", "swc_max_wet", "swc_seas_year",
  #                        "tas_mean_year", "tas_min_wet", "tas_max_dry", "tas_seas_year")) %>% 
    filter(variable %in% c("swc_mean_year", "swc_seas_year",
                         "tas_mean_year", "tas_seas_year")) %>% 
  ggplot(aes(site, value)) +
  geom_boxplot() +
  facet_wrap(~ variable, scales = "free") +
  theme_bw() +
  theme(axis.title = element_blank()) +
  ggpubr::stat_compare_means(label.y.npc = 0.7)
```

```{r}
#| message: false
#| warning: false
read_tsv("outputs/tomst_indices.tsv") %>% 
  left_join(read_tsv("outputs/tomst_infos.tsv") %>% 
  select(tomst_sensornum, topography) %>% 
  unique()) %>% 
  gather(variable, value, -site, -tomst_sensornum, -topography) %>% 
  filter(variable %in% c("tas_mean_year", "tas_min_wet", "tas_max_dry")) %>% 
  ggplot(aes(topography, value)) +
  geom_boxplot() +
  facet_wrap(~ variable ~ site) +
  theme_bw() +
  theme(axis.title = element_blank()) +
  ggpubr::stat_compare_means(label.y.npc = 0.7) +
  theme(axis.text.x = element_text(angle = 90), axis.title = element_blank())
```

```{r}
#| message: false
#| warning: false
read_tsv("outputs/tomst_indices.tsv") %>% 
  left_join(read_tsv("outputs/tomst_infos.tsv") %>% 
  select(tomst_sensornum, topography) %>% 
  unique()) %>% 
  gather(variable, value, -site, -tomst_sensornum, -topography) %>% 
  filter(variable %in% c("swc_mean_year", "swc_min_dry", "swc_max_wet")) %>% 
  ggplot(aes(topography, value)) +
  geom_boxplot() +
  facet_wrap(~ variable ~ site) +
  theme_bw() +
  theme(axis.title = element_blank()) +
  ggpubr::stat_compare_means(label.y.npc = 0.7) +
  theme(axis.text.x = element_text(angle = 90), axis.title = element_blank())
```

```{r}
#| message: false
#| warning: false
read_tsv("outputs/tomst_indices.tsv") %>% 
  left_join(read_tsv("outputs/tomst_infos.tsv") %>% 
  select(tomst_sensornum, light) %>% 
  unique()) %>% 
  gather(variable, value, -site, -tomst_sensornum, -light) %>% 
  filter(variable %in% c("swc_mean_year", "swc_min_dry", "swc_max_wet")) %>% 
  ggplot(aes(light, value)) +
  geom_boxplot() +
  facet_wrap(~ variable ~ site) +
  theme_bw() +
  theme(axis.title = element_blank()) +
  ggpubr::stat_compare_means(label.y.npc = 0.7) +
  theme(axis.text.x = element_text(angle = 90), axis.title = element_blank())
```

```{r}
#| message: false
#| warning: false
read_tsv("outputs/tomst_indices.tsv") %>% 
  left_join(read_tsv("outputs/tomst_infos.tsv") %>% 
  select(tomst_sensornum, light) %>% 
  unique()) %>% 
  gather(variable, value, -site, -tomst_sensornum, -light) %>% 
  filter(variable %in% c("tas_mean_year", "tas_min_wet", "tas_max_dry")) %>% 
  ggplot(aes(light, value)) +
  geom_boxplot() +
  facet_wrap(~ variable ~ site) +
  theme_bw() +
  theme(axis.title = element_blank()) +
  ggpubr::stat_compare_means(label.y.npc = 0.7) +
  theme(axis.text.x = element_text(angle = 90), axis.title = element_blank())
```

## Old

-   [BIOCLIM](https://www.worldclim.org/data/bioclim.html) indices
    -   BIO1 = Annual Mean Temperature
    -   BIO2 = Mean Diurnal Range (Mean of monthly (max temp - min temp))
    -   BIO3 = Isothermality (BIO2/BIO7) (×100)
    -   BIO4 = Temperature Seasonality (standard deviation ×100)
    -   BIO5 = Max Temperature of Warmest Month
    -   BIO6 = Min Temperature of Coldest Month
    -   BIO7 = Temperature Annual Range (BIO5-BIO6)
    -   BIO8 = Mean Temperature of Wettest Quarter
    -   BIO9 = Mean Temperature of Driest Quarter
    -   BIO10 = Mean Temperature of Warmest Quarter
    -   BIO11 = Mean Temperature of Coldest Quarter
    -   BIO12 = Annual Precipitation
    -   ~~BIO13 = Precipitation of Wettest Month~~
    -   ~~BIO14 = Precipitation of Driest Month~~
    -   ~~BIO15 = Precipitation Seasonality (Coefficient of Variation)~~
    -   ~~BIO16 = Precipitation of Wettest Quarter~~
    -   ~~BIO17 = Precipitation of Driest Quarter~~
    -   ~~BIO18 = Precipitation of Warmest Quarter~~
    -   ~~BIO19 = Precipitation of Coldest Quarter~~
    -   To be adapted to each temperature measurement
    -   *Replace precipitation with soil water content?*
-   [Extreme events 27](https://etccdi.pacificclimate.org/list_27_indices.shtml)
    -   TX_x: Monthly maximum value of daily maximum temperature
    -   ~~TN_x: Monthly maximum value of daily minimum temperature~~
    -   TX_n: Monthly minimum value of daily maximum temperature
    -   ~~TN_n: Monthly minimum value of daily minimum temperature~~
    -   ~~TN10p: Percentage of days when TN \< 10th percentile~~
    -   TX10p: Percentage of days when TX \< 10th percentile
    -   ~~TN90p: Percentage of days when TN \> 90th percentile~~
    -   TX90p: Percentage of days when TX \> 90th percentile
    -   WSDI, Warm speel duration index: Annual count of days with at least 6 consecutive days when TX \> 90th percentile
    -   ~~CSDI, Cold speel duration index: Annual count of days with at least 6 consecutive days when TN \< 10th percentile~~
    -   DTR, Daily temperature range: Monthly mean difference between TX and TN
    -   To be adapted to each temperature measurement
    -   *Replace precipitation with soil water content?*
-   Time periods:
    -   Dial / Nocturnal
    -   Day
    -   Month
    -   Season (Dry / Wet)
    -   Year

```{r prepold}
#| eval: false
data <- read_tsv("outputs/tomst_daily_cleaned.tsv") %>% 
  filter(variable != "t_surface", type == "daily", metric == "m") %>% 
  select(-type, -metric) %>% 
  group_by(site, tomst_sensornum, variable, date = floor_date(date, "month")) %>% 
  summarise(l = min(value), m = mean(value), h = max(value)) %>% 
  gather(metric, value, -site, -tomst_sensornum, -variable, -date) %>% 
  mutate(variable = paste0(variable, "_", metric)) %>% 
  select(-metric) %>% 
  mutate(season = ifelse(date >= as_date("23/8/1") & date < as_date("23/12/1"),
                         "dry", "wet")) %>% 
  pivot_wider(names_from = variable, values_from = value)
year_ind <- data %>% 
  na.omit() %>% 
  group_by(site, tomst_sensornum) %>% 
  summarise(
    bio1_air = mean(t_air_m),
    bio1_soil = mean(t_soil_m),
    bio2_air = mean(t_air_h - t_air_l),
    bio2_soil = mean(t_soil_h - t_soil_l),
    bio4_air = sd(t_air_m)*100,
    bio4_soil = sd(t_soil_m)*100,
    bio5_air = max(t_air_h),
    bio5_soil = max(t_soil_h),
    bio6_air = min(t_air_l),
    bio6_soil = min(t_soil_l),
    bio7_air = bio5_air - bio6_air,
    bio7_soil = bio5_soil - bio6_soil,
    bio3_air = bio2_air/bio7_air*100,
    bio3_soil = bio2_soil/bio7_soil*100,
    bio12_soil = mean(swc_m),
    bio13_soil = max(swc_h),
    bio14_soil = min(swc_l),
    bio15_soil = sd(swc_m)/mean(swc_m)
  )
wet_ind <- data %>% 
  filter(season == "wet") %>% 
  na.omit() %>% 
  group_by(site, tomst_sensornum) %>% 
  summarise(
    bio8_air = mean(t_air_m),
    bio8_soil = mean(t_soil_m),
    bio16_soil = mean(swc_m)
  )
dry_ind <- data %>% 
  filter(season == "dry") %>% 
  na.omit() %>% 
  group_by(site, tomst_sensornum) %>% 
  summarise(
    bio9_air = mean(t_air_m),
    bio9_soil = mean(t_soil_m),
    bio17_soil  = mean(swc_m)
  )
bind_rows(year_ind, dry_ind, wet_ind) %>% 
  gather(variable, value, -site, -tomst_sensornum) %>% 
  separate(variable, c("metric", "variable")) %>% 
  na.omit() %>% 
  write_tsv("outputs/tomst_indices_old.tsv")
```

```{r}
#| message: false
#| warning: false
read_tsv("outputs/tomst_indices_old.tsv") %>% 
  mutate(variable = paste(metric, variable)) %>% 
  na.omit() %>% 
  select(-metric) %>%
  pivot_wider(names_from = variable, values_from = value) %>% 
  select(-site, -tomst_sensornum) %>% 
  cor(use = "pairwise.complete.obs") %>% 
  corrplot::corrplot(method = "number", type = "upper", 
                     number.digits = 1, number.cex = 0.8)
```

```{r}
#| message: false
#| warning: false
read_tsv("outputs/tomst_indices_old.tsv") %>% 
  ggplot(aes(metric, value, fill = variable)) +
  geom_boxplot() +
  theme_bw() +
  facet_wrap(~ metric, scales = "free")
```

```{r}
#| message: false
#| warning: false
read_tsv("outputs/tomst_indices_old.tsv") %>% 
  left_join(read_tsv("outputs/tomst_infos.tsv") %>% 
  select(tomst_sensornum, topography) %>% 
  unique()) %>% 
  ggplot(aes(topography, value)) +
  geom_boxplot() +
  theme_bw() +
  facet_wrap(~ paste(metric, variable), scales = "free_y") +
  ggpubr::stat_compare_means(aes(label = after_stat(p.adj)),
                             label.y.npc = 0.7) +
  theme(axis.text.x = element_text(angle = 90), axis.title = element_blank())
```

```{r}
#| message: false
#| warning: false
read_tsv("outputs/tomst_indices_old.tsv") %>% 
  left_join(read_tsv("outputs/tomst_infos.tsv") %>% 
  select(tomst_sensornum, light) %>% 
  unique()) %>% 
  ggplot(aes(light, value)) +
  geom_boxplot() +
  theme_bw() +
  facet_wrap(~ paste(metric, variable), scales = "free_y") +
  ggpubr::stat_compare_means(aes(label = after_stat(p.adj)),
                             label.y.npc = 0.7) +
  theme(axis.text.x = element_text(angle = 90), axis.title = element_blank())
```
